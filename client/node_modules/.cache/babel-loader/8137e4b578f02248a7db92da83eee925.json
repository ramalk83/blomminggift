{"ast":null,"code":"import Axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST } from '../constants/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post(\"/api/users/signin\", {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["C:/Transfer/react/Ecommerce/client/src/actions/userActions.js"],"names":["Axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,gBAAnD,EAAqEC,qBAArE,QAAkG,4BAAlG;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACpDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER,mBAAR;AAA6BS,IAAAA,OAAO,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT;AAAtC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,mBAAX,EAAgC;AAAEN,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEP,mBAAR;AAA6BQ,MAAAA,OAAO,EAAEC;AAAtC,KAAD,CAAR;AACAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,gBAAR;AAA0BO,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CATH;;AAWE,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAMb,KAAN,EAAaC,QAAb,KAA0B,MAAOC,QAAP,IAAoB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,qBAAR;AAA+BM,IAAAA,OAAO,EAAE;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAxC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CAAW,mBAAX,EAAgC;AAAEO,MAAAA,IAAF;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEW,qBAAR;AAA+BV,MAAAA,OAAO,EAAEC;AAAxC,KAAD,CAAR;AACAX,IAAAA,MAAM,CAACa,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AACD,GAJD,CAIE,OAAOK,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEY,kBAAR;AAA4BX,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA3C,KAAD,CAAR;AACD;AACF,CATD;;AAYE,SAAQZ,MAAR,EAAea,QAAf","sourcesContent":["import Axios from 'axios';\r\nimport Cookie from 'js-cookie';\r\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL, USER_REGISTER_REQUEST } from '../constants/userConstants';\r\n\r\nconst signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n      const { data } = await Axios.post(\"/api/users/signin\", { email, password });\r\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n      Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({ type: USER_SIGNIN_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n  const register = (name,email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: {name, email, password } });\r\n    try {\r\n      const { data } = await Axios.post(\"/api/users/signin\", { name,email, password });\r\n      dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n      Cookie.set('userInfo', JSON.stringify(data));\r\n    } catch (error) {\r\n      dispatch({ type: USER_REGISTER_FAIL, payload: error.message });\r\n    }\r\n  }\r\n\r\n\r\n    export {signin,register}\r\n    "]},"metadata":{},"sourceType":"module"}