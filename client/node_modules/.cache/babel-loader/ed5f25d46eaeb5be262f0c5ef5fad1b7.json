{"ast":null,"code":"var _jsxFileName = \"C:\\\\Transfer\\\\react\\\\Ecommerce\\\\client\\\\src\\\\screens\\\\CartScreen.js\";\nimport React, { useEffect } from 'react';\nimport { addToCart } from '../actions/cartAction';\nimport { useDispatch, useSelector } from 'react-redux';\nexport default function CartScreen(props) {\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"cart-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"Shopping Cart\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Price\")), cartItems.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"Cart is empty\") : cartItems.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image,\n    alt: \"product\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cart-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/product/\" + item.product,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }\n  }, \"Qty:\", /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }, \"1\"))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 20\n    }\n  }, item.price))))));\n}","map":{"version":3,"sources":["C:/Transfer/react/Ecommerce/client/src/screens/CartScreen.js"],"names":["React","useEffect","addToCart","useDispatch","useSelector","CartScreen","props","cart","state","cartItems","productId","match","params","id","qty","location","search","Number","split","dispatch","length","map","item","image","product","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,uBAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAEtC,QAAMC,IAAI,GAACH,WAAW,CAACI,KAAK,IAAEA,KAAK,CAACD,IAAd,CAAtB;AACA,QAAM;AAACE,IAAAA;AAAD,MAAYF,IAAlB;AACA,QAAMG,SAAS,GAACJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,EAAnC;AACA,QAAMC,GAAG,GAACR,KAAK,CAACS,QAAN,CAAeC,MAAf,GAAuBC,MAAM,CAACX,KAAK,CAACS,QAAN,CAAeC,MAAf,CAAsBE,KAAtB,CAA4B,GAA5B,EAAiC,CAAjC,CAAD,CAA7B,GAAmE,CAA7E;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAGS,SAAH,EAAa;AACTS,MAAAA,QAAQ,CAACjB,SAAS,CAACQ,SAAD,EAAWI,GAAX,CAAV,CAAR;AACH;AACJ,GAJQ,EAIP,EAJO,CAAT;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAI,IAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,CADF,EAUIL,SAAS,CAACW,MAAV,KAAqB,CAArB,gBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,GAKEX,SAAS,CAACY,GAAV,CAAcC,IAAI,iBAChB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,KAAf;AAAsB,IAAA,GAAG,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE,cAAcD,IAAI,CAACE,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACG,IADR,CADF,CADF,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,CADJ,CAPJ,eAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMH,IAAI,CAACI,KAAX,CAbD,CAJF,CADF,CAfN,CADA,CADJ;AA4CH","sourcesContent":["import React, { useEffect } from 'react'\r\nimport {addToCart} from '../actions/cartAction'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nexport default function CartScreen(props) {\r\n  \r\n    const cart=useSelector(state=>state.cart)\r\n    const {cartItems}=cart;\r\n    const productId=props.match.params.id;\r\n    const qty=props.location.search? Number(props.location.search.split(\"=\")[1]):1;\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(()=>{\r\n        if(productId){\r\n            dispatch(addToCart(productId,qty));\r\n        }\r\n    },[])\r\n    \r\n    return (\r\n        <div className=\"cart-list\">\r\n        <ul className=\"cart-list-container\">\r\n          <li>\r\n            <h3>\r\n              Shopping Cart\r\n            </h3>\r\n            <div>\r\n              Price\r\n            </div>\r\n          </li>\r\n          {\r\n            cartItems.length === 0 ?\r\n              <div>\r\n                Cart is empty\r\n            </div>\r\n              :\r\n              cartItems.map(item =>\r\n                <li>\r\n                  <div className=\"cart-image\">\r\n                    <img src={item.image} alt=\"product\" />\r\n                  </div>\r\n                  <div className=\"cart-name\">\r\n                    <div>\r\n                      <Link to={\"/product/\" + item.product}>\r\n                        {item.name}\r\n                      </Link>\r\n  \r\n                    </div>\r\n                      <div>Qty: \r\n                          <select>\r\n                              <option value=\"1\">1</option>\r\n                          </select>\r\n                    </div>    \r\n                  \r\n                   <div>{item.price}</div>\r\n                </div>\r\n             </li>\r\n                )\r\n            }\r\n          </ul>\r\n    </div>        \r\n    \r\n    )    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}